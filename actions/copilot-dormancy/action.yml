name: 'Copilot Dormancy Check'
description: 'Check for dormant GitHub Copilot accounts in a GitHub organization'
inputs:
  org:
    description: 'GitHub organization name to check for dormant accounts'
    required: false
    default: ${{ github.repository_owner }}
  activity-log-repo:
    description: 'The owner and repository name to fetch/store activity logs from (e.g., owner/repo)'
    required: false
    default: ${{ github.repository }}
  duration:
    description: 'Duration of inactivity to consider an account dormant (e.g., 90d, 3m, 1y)'
    required: false
    default: '90d'
  token:
    description: 'GitHub token with appropriate permissions'
    required: false
    default: ${{ github.token }}
  dry-run:
    description: 'Run in dry-run mode wont write activity log'
    required: false
    default: 'false'
  notifications-enabled:
    description: 'Enable notifications for dormant users'
    required: false
    default: 'false'
  notifications-dry-run:
    description: 'Run in dry-run mode for notifications'
    required: false
    default: 'false'
  notifications-repo:
    description: 'Repository to create notification issues in (e.g., owner/repo)'
    required: false
    default: ${{ github.repository }}
  notifications-duration:
    description: 'Grace period before removing users after notification (e.g., 7d, 2w, 1m)'
    required: false
    default: '7d'
  assign-user-to-notification-issue:
    # Note: users must have write access to the repo to be assigned
    description: 'Flag to enable issue assignment for dormant users'
    required: false
    default: 'false'
  remove-dormant-accounts:
    description: 'Remove dormant accounts after the grace period, only if notifications are enabled'
    required: false
    default: 'true'
  remove-user-from-assigning-team:
    description: 'Allow removing users from team that assigned Copilot'
    required: false
    default: 'false'
  notifications-body:
    description: 'Custom message template for user notifications'
    required: false
    default: |
      The ${{ github.repository_owner }} organization automatically revokes GitHub Copilot licenses that have been inactive for {{dormantAfter}} days. According to GitHub Copilot usage data, your account has not used Copilot in this timeframe and is at risk of having its license revoked.

      > [!NOTE]
      >  Use Copilot within **{{gracePeriod}}** to maintain access.  Examples of Copilot usage include:
      >  
      > - Receiving a code suggestion in an IDE
      > - Chatting with Copilot Chat in an IDE
      > - Creating or updating a knowledge base
      > - Creating a pull request summary
      > - Interacting with Copilot Chat in GitHub
      > - Interacting with Copilot on a mobile device
      > - Interacting with Copilot Chat for CLI

      This issue will be automatically closed when new activity is detected or once the license is revoked.

      <details>
      <summary>I actively use Copilot, why did I receive this?</summary>
      <br/>
      Latest activity is determined by the <code>last_activity_at</code> field from Copilot Billing APIs. This API attempts to align with actual usage, however there are Copilot interactions that may not be captured, and IDE settings which may affect the reported activity. See <a href="https://docs.github.com/en/enterprise-cloud@latest/copilot/managing-copilot/managing-github-copilot-in-your-organization/reviewing-activity-related-to-github-copilot-in-your-organization/reviewing-user-activity-data-for-copilot-in-your-organization#understanding-the-last_activity_at-calculation">GitHub Docs</a> for more information.
      </details>
      <details>
      <summary>When was my last activity?</summary>
      <br/>
      Your last activity was on <b>{{lastActivity}}</b>.
      </details>
outputs:
  dormant-users:
    description: 'JSON string containing list of dormant accounts'
  active-users:
    description: 'JSON string containing list of active accounts'
  last-activity-fetch:
    description: 'Timestamp of when the activity was last fetched'
  check-stats:
    description: 'Statistics about the dormancy check'
  notification-results:
    description: 'Results of the notification process'
  error:
    description: 'Any errors encountered during the process'

runs:
  using: 'node20'
  main: 'dist/index.js'
